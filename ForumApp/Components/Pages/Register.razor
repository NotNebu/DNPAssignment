@page "/register"
@using ApiContracts.DTOs
@using ForumApp.Services
@inject IUserService UserService

<h2>Register</h2>
<EditForm Model="@newUser" OnValidSubmit="HandleValidSubmit" class="register-form">
    <div class="form-group">
        <label for="username">Username</label>
        <InputText id="username" @bind-Value="newUser.UserName" class="form-control" />
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" type="password" @bind-Value="newUser.Password" class="form-control" />
    </div>
    <button type="submit">Register</button>
</EditForm>

@code {
    private CreateUserDto newUser = new CreateUserDto
    {
        UserName = string.Empty,
        Password = string.Empty
    };

    private async Task HandleValidSubmit()
    {
        try
        {
            Console.WriteLine($"Attempting to register user: Username: {newUser.UserName}, Password: {newUser.Password}");
            
            var createdUser = await UserService.AddUserAsync(newUser);
            Console.WriteLine("User registered successfully.");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error registering user: {ex.Message}");
        }
    }

}